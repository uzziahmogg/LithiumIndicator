По завершению зигзага (коррекции, отката), на развороте после отката мы делаем вход. Как и в любой ситауции разорота возможны две точки - ранний вход и стандартный.

Элементарные сигналы раннего входа:
1. Начало разворота цены после отката, коррекции, pullback - вход при образовании разворотной свечной конфигурации про-трендовой (про-импульсной в направлении новго тренда, который еще ожидет установления)
2. Stoch разворот после отката в районе level50 и возобновление движения в прежнем направлении с  StochSteamer
3. RSI разворот после отката в районе level50 с сохраненем моментума и возобновление движения в прежнем направлении
Вход на открытии следующей свечи после сигнальной. Сигнальная  - завершение свечной разворотной конфигурации в соответствии с критериями силы конфигурации. В большинстве случаев - сигнальная - третья свеча с ценой закрытия больше всех в направлении нового трнеда(втоая свеча - контртрендовая или дожи).

Элементарные сигналы стандартный вход :
1. Завершение всех разоротных конфигураций и консолидаций и прообой уровня начала коррекции, локального экстремума тренда, границы разворотной консолидации, после котороо началось контр-трендовое движение, а именно - цена закрытия или цена экстремума, в зависимости от выбора трейдера (цена закрытия - стандартный выбор для большинства трейдеров) .
2. Stoch разворот после отката в районе level50 и возобновление движения в прежнем направлении с  StochSteamer
3. RSI разворот после отката в районе level50 с сохраненем моментума и возобновление движения в прежнем направлении
Вход на открытии следующей свечи после сигнальной. Сигнальная  -  свеча пробоя уровня, то есть с открытием с одной стороны уровня, с закрытием на другой стороны уровня.

После пробоя центральной линии и перехода цены в зону тренда конкурента развитие возможно в виде двух сценариев: во-первых как правило, после удачного Zigzag, силы новых хозяев рынка хватает на проход сквозь всю зону настроения тенда на RSI и пробой границы зоны настроения тренда/зоны тренда (RSITrendOn), входя в зону устойчивого тренда и завершая, таким образм, все три признака? три элементарный сигнала образования устойчивого тренда
1. PriceCrossMA
2. StochCross и StochCross50
3. RSICross RSITrendOn
Точка входа - открытие свечи следующей после сигнальной. Сигнальная - свеча пробоя на графике RSI границы тренда (20 вниз или 60 вверх), свеча сигнала RSITrendOn.

Следующие стадии - колебательные движения в тренде и сигналы присоединения к тренду после откатов.

Второй сценарий - не вход в зону тренда, а откат до центральной линии и далее опять два сценария - продолжение отката в зону противоположного настроения тренда и установдление флета или конец отката, возобновление импульса в направлении тренда и присоединение к тренду на ранней стадии - сигнал Uturn50 , далее либо консолидация в одной из зон сантимента тренда RSI и далее пробой границы настроения тренда в зону тренда и установление тренда (сигнал TrendOn), либо сразу минуя консолидацию - установление тренда без консолидации (сигнал TrendOn),. Далее в зоне установления тренда два синала - Utrun как вариант сигнал Uturn50 и Spring как вариант TrendOn. То есть цена ходит из фазы в фазу, определяемом зонами RSI и на границе фаз мы ловим сигналы

Так что расстриваем откат до центральной линии (level50 на осциляторах) и присоединение к тренду на ранней стадии - сигнал Uturn50

todo:
☐ check necessarity names in arrays  @timestamp(2021-09-29 12:37) @important
☐ create function for label text in chart labels @timestamp(2021-09-29 12:24) @due(tuesday)
☐ check tostring in AddLabel chart_levels @timestamp(2021-09-29 12:24)
☐ check for Center and others @timestamp(2021-09-29 12:24)
☐ check Signals and add names for Signals @timestamp(2021-09-29 12:24)
☐ check for Stochs.VSteamer and Stochs.HSteamer @timestamp(2021-09-29 12:24)
☐ in SignalOscVSteamer ad move for another one 3th candle @timestamp(2021-09-29 12:24)
☐ rewrite SignalOscTrendOn and SignalOscTrendOff @timestamp(2021-09-29 13:16)
☐ add shrinking delta to SignalOscUturn3 @timestamp(2021-09-30 13:33)
☐ add SignalPriceCrossLevel for price cross PriceChannel Top/Botom @timestamp(2021-09-29 13:18)

--#region III.3. Elementary RSI Signal: Signals[Down/Up].RSIs["TrendOff"]
    --               Enter Signals: Signals[Down/Up]["TrendOff"]
    --               Depends on signal: SignalOscTrendOff
    --               Terminates by signals: Reverse self-signal, SignalOscTrendOff, SignalOscCross
    --               Terminates by duration: Signals.Params.Duration

    -- debuglog
    --[[ if (index >= 10630) then
        local t = T(index)
        PrintDebugMessage(index, t.month, t.day, t.hour, t.min)
    end ]]

--[[if (index == 10660) or (index == 10659) or (index == 10658) or (index == 10657) then
        PrintDebugMessage("---", RSIs.Slows[index-2], RSIs.Slows[index-1], RSIs.Slows[index])
    end ]]

    -- check start signal up trendon - slow rsi enter on uptrend zone
    if (SignalOscTrendOn((index-1), Directions.Long, RSIs)) then

        -- set signal on
        SetSignal((index-1), Directions.Long, RSIs, Signals.TrendOn)

        -- set chart label
        ChartLabels[RSIs.Name][index-1] = SetChartLabel((index-1), Directions.Long, RSIs, Signals.TrendOn, ChartIcons.Arrow, ChartPermissions.Event)
    end -- up start

    -- check signal up exist
    if (Signals[Signals.TrendOn.Name][Directions.Long][RSIs.Name].Candle > 0) then

        -- set duration signal up
        local duration = index - Signals[Signals.TrendOn.Name][Directions.Long][RSIs.Name].Candle

        -- check continuation signal up
        if (duration <= Signals.Duration) then

            -- check termination by slow rsi left off uptrend zone
            if (SignalOscTrendOff((index-1), Directions.Short, RSIs)) then

                -- set signal up off
                Signals[Signals.TrendOn.Name][Directions.Long][RSIs.Name].Candle = 0

                -- set chart label
                ChartLabels[RSIs.Name][index-1] = SetChartLabel((index-1), Directions.Long, RSIs, Signals.TrendOn, ChartIcons.Cross, ChartPermissions.Event, GetMessage(DealStages.End, "TrendOffDown", duration))

            -- check termination by fast rsi cross slow rsi down
            elseif (SignalOscCross((index-1), Directions.Short, RSIs)) then

                -- set signal up off
                Signals[Signals.TrendOn.Name][Directions.Long][RSIs.Name].Candle = 0

                -- set chart label
                ChartLabels[RSIs.Name][index-1] = SetChartLabel((index-1), Directions.Long, RSIs, Signals.TrendOn, ChartIcons.Cross, ChartPermissions.Event, GetMessage(DealStages.End, "CrossDown", duration))

            -- process continuation signal up
            else
                -- set chart label
                ChartLabels[RSIs.Name][index] = SetChartLabel(index, Directions.Long, RSIs, Signals.TrendOn, ChartIcons.Minus, ChartPermissions.Event, GetMessage(DealStages.Continue, duration))
            end

        -- check termination by duration signal up
        elseif (duration > Signals.Duration) then

            -- set signal up off
            Signals[Signals.TrendOn.Name][Directions.Long][RSIs.Name].Candle = 0

            -- set chart label
            ChartLabels[RSIs.Name][index] = SetChartLabel(index, Directions.Long, RSIs, Signals.TrendOn, ChartIcons.Cross, ChartPermissions.Event, GetMessage(DealStages.End, "Duration", duration))
        end
    end -- up presence

    -- check start signal down trendon - slow rsi enter on down trend zone
    if (SignalOscTrendOn((index-1), Directions.Short, RSIs)) then

        SetSignal((index-1), Directions.Short, RSIs, Signals.TrendOn)

        -- set chart label
        ChartLabels[RSIs.Name][index-1] = SetChartLabel((index-1), Directions.Short, RSIs, Signals.TrendOn, ChartIcons.Arrow, ChartPermissions.Event, DealStages.Start)
    end -- down start

    -- check presence signal down
    if (Signals[Signals.TrendOn.Name][Directions.Short][RSIs.Name].Candle > 0) then

        -- set duration signal down
        local duration = index - Signals[Signals.TrendOn.Name][Directions.Short][RSIs.Name].Candle

        -- check continuation signal down
        if (duration <= Signals.Duration) then

            -- check termination by slow rsi left off downtrend zone
            if (SignalOscTrendOff((index-1), Directions.Long, RSIs)) then

                -- set signal down off
                Signals[Signals.TrendOn.Name][Directions.Short][RSIs.Name].Candle = 0

                -- set chart label
                ChartLabels[RSIs.Name][index-1] = SetChartLabel((index-1), Directions.Short, RSIs, Signals.TrendOn, ChartIcons.Cross, ChartPermissions.Event, GetMessage(DealStages.End,  "TrendOffUp", duration))

                -- check termination by fast rsi cross slow rsi up
            elseif (SignalOscCross((index-1), Directions.Long, RSIs)) then

                -- set signal down off
                Signals[Signals.TrendOn.Name][Directions.Short][RSIs.Name].Candle = 0

                -- set chart label
                ChartLabels[RSIs.Name][index-1] = SetChartLabel((index-1), Directions.Short, RSIs, Signals.TrendOn, ChartIcons.Cross, ChartPermissions.Event, GetMessage(DealStages.End, "CrossUp", duration))

            -- process continuation signal down
            else
                -- set chart label
                ChartLabels[RSIs.Name][index] =  SetChartLabel(index, Directions.Short, RSIs, Signals.TrendOn, ChartIcons.Minus, ChartPermissions.Event, GetMessage(DealStages.Continue, duration))
            end

        -- check termination by duration signal down
        elseif (duration > Signals.Duration) then

            -- set signal down off
            Signals[Signals.TrendOn.Name][Directions.Short][RSIs.Name].Candle = 0

            -- set chart label
            ChartLabels[RSIs.Name][index] =  SetChartLabel(index, Directions.Short, RSIs, Signals.TrendOn, ChartIcons.Cross, ChartPermissions.Event, GetMessage(DealStages.End, "Duration", duration))
        end
    end -- down presence
    ===========================================================================
    function SignalOscUturn4(osc, index, direction)	
	if (CheckDataSufficiency(index, 4, oscs.Slow) and CheckDataSufficiency(index, 4, oscs.Fast) and 
		CheckDataSufficiency(index, 4, oscs.Delta)) then
		-- return true or false
		return ( -- deltas uturn
			(SignalMove(osc.Delta, index-2, Directions.Down) and SignalMove(osc.Delta, index, Directions.Up)) and
			-- fastosc/slowosc uturn
			(SignalMove(osc.Fast, index-2, Reverse(direction)) and SignalMove(osc.Fast, index, direction) and SignalMove(osc.Slow, index, direction)) and
			-- fastosc over slowosc all 4 candles
			(SignalIsRelate(osc.Fast[index-4], osc.Slow[index-4], direction) and
			SignalIsRelate(osc.Fast[index-3], osc.Slow[index-3], direction) and
			SignalIsRelate(osc.Fast[index-2], osc.Slow[index-2], direction) and
			SignalIsRelate(osc.Fast[index-1], osc.Slow[index-1], direction)))
	else
		return false
	end
end

--
-- Signal Price Uturn4
--
function SignalPriceUturn4(price, ma, index, direction)
	direction = string.upper(string.sub(direction, 1, 1))

	if (direction == Directions.Up) then
		-- first 2 candles down, last candle up
		return ((((price.Open[index-4] > price.Close[index-4]) or (price.Open[index-3] > price.Close[index-3])) and
			(price.Close[index-1] > price.Open[index-1])) and
			-- price.close uturn
			(SignalMove(price.Close, index-2, Reverse(direction)) and SignalMove(price.Close, index, direction)) and
			-- delta min at top uturn
			(SignalMove(ma.Delta, index-2, Directions.Down) and SignalMove(ma.Delta, index, Directions.Up)) and
			-- ma move up
			(SignalMove(ma, (index-2), direction) and SignalMove(ma, index, direction))  and
			-- strength condition
			((price.Close[index-1] > (price.Low[index-3] + 2.0 / 3.0 * (price.High[index-3] - price.Low[index-3]))) or
			(price.Close[index-1] > (price.Low[index-2] + 2.0 / 3.0 * (price.High[index-2] - price.Low[index-2])))))

	elseif (direction == Directions.Down) then
		-- one or two of 2 first candles are down, last 1 candle is up
		return ((((price.Close[index-4] > price.Open[index-4]) or (price.Close[index-3] > price.Open[index-3])) and
			(price.Open[index-1] > price.Close[index-1])) and
			-- price.close uturn
			(SignalMove(price.Close, index-2, Reverse(direction)) and SignalMove(price.Close, index, direction)) and
			-- delta min at top uturn
			(SignalMove(ma.Delta, index-2, Directions.Down) and SignalMove(ma.Delta, index, Directions.Up)) and
			-- ma move down
			(SignalMove(ma, (index-2), direction) and SignalMove(ma, index, direction)) and
			-- strength condition
			(((price.High[index-3] - 2.0 / 3.0 * (price.High[index-3] - price.Low[index-3])) > price.Close[index-1]) or
			((price.High[index-2] - 2.0 / 3.0 * (price.High[index-2] - price.Low[index-2])) > price.Close[index-1])))
	end
end
